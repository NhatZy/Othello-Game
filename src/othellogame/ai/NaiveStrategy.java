package othellogame.ai;

import othellogame.model.*;

/**
 * Represents a naive strategy for a computer player in the Othello game.
 * <p>
 * The naive strategy makes random moves by selecting a valid move at random from the available valid moves.
 * @author Dinh Thuy Nhat Vy
 * @version 1.0, 12/07/2023
 * @see Strategy
 * @see Move
 * @see Game
 */
public class NaiveStrategy implements Strategy {
    /**
     * The name of the naive strategy.
     */
    private String name = "Naive AI";

    /**
     * Default constructor for the {@code NaiveStrategy} class.
     * <p>
     * Note: this constructor is automatically generated by the compiler and is not intended for direct use.
     */
    public NaiveStrategy() {}

    /**
     * Gets the name of the naive strategy.
     * @return the name of the naive strategy.
     */
    @Override
    public String getStrategy() {
        return name;
    }

    /**
     * Determines a move based on the naive strategy.
     * <p>
     * The naive strategy randomly selects a valid move from the list of available valid moves in the Othello game.
     * @param game the current Othello game.
     * @return a randomly selected valid move based on the naive strategy.
     */
    @Override
    public Move determineMove(Game game) {
        OthelloGame othelloGame = (OthelloGame) game;
        int randomIndex = (int) Math.floor(Math.random() * othelloGame.getValidMoves().size());
        return othelloGame.getValidMoves().get(randomIndex);
    }
}